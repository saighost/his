package cn.honry.mobile.importExcel.action;import java.io.File;import java.io.FileInputStream;import java.text.DecimalFormat;import java.util.Date;import java.util.HashMap;import java.util.Map;import org.apache.commons.lang3.StringUtils;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.apache.poi.ss.usermodel.WorkbookFactory;import org.apache.shiro.authz.annotation.RequiresPermissions;import org.apache.struts2.convention.annotation.Action;import org.apache.struts2.convention.annotation.InterceptorRef;import org.apache.struts2.convention.annotation.InterceptorRefs;import org.apache.struts2.convention.annotation.Namespace;import org.apache.struts2.convention.annotation.ParentPackage;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import cn.honry.base.bean.model.SysEmployee;import cn.honry.mobile.importExcel.service.ImportExcelService;import cn.honry.utils.JSONUtils;import cn.honry.utils.ShiroSessionUtils;import cn.honry.utils.WebUtils;@Controller@Scope("prototype")@ParentPackage("global")@InterceptorRefs(value = { @InterceptorRef(value = "manageInterceptor") })@Namespace("/mosys/importExcel")public class ImportExcelAction {		@Autowired	@Qualifier(value = "importExcelService")	private ImportExcelService importExcelService;		public void setImportExcelService(ImportExcelService importExcelService) {		this.importExcelService = importExcelService;	}	private File empFile;				/** 员工上传	* @param request	* @param response	* @param empFile 上传文件   格式：员工号   姓名  办公室电话  移动电话  电子邮件	* @author zxl	* @date 2017年6月15日	*/	@RequiresPermissions(value={"YWSJCSH:function:view"})	@Action(value = "uploadeExcel")	public void uploadeExcel() {		Map<String,String> retMap = new HashMap<>();		String name = ShiroSessionUtils.getCurrentUserFromShiroSession().getName();		try {			if(null != empFile && empFile.length() != 0){				Workbook xss = WorkbookFactory.create(new FileInputStream(empFile));				for(int i=0;i <xss.getNumberOfSheets();i++) {				 	Sheet sheet =xss.getSheetAt(i); // 获取第一个工作簿				 	for(int j = 1; j < sheet.getPhysicalNumberOfRows(); j++) {				 	    // 获取当前工作薄的每一行				 			Row xssfRow =sheet.getRow(j);				 			if (xssfRow != null) {				 				SysEmployee emp = new SysEmployee();			            		if(StringUtils.isNotBlank(getCellValue(xssfRow.getCell(0)))){				                	emp.setJobNo(getCellValue(xssfRow.getCell(0)));									emp.setName(getCellValue(xssfRow.getCell(1)));									emp.setOfficePhone(getCellValue(xssfRow.getCell(2)));									emp.setMobile(getCellValue(xssfRow.getCell(3)));									emp.setEmail(getCellValue(xssfRow.getCell(4)));									emp.setUpdateTime(new Date());									emp.setUpdateUser(name);									importExcelService.updateEmp(emp);			            		}			                				                				                }				 		  				 	}			  }			  retMap.put("resCode", "success");			  retMap.put("resMsg", "上传成功！");			}else{				 retMap.put("resCode", "error");				 retMap.put("resMsg", "上传文件不能为空！");			}		} catch (Exception e) {			 retMap.put("resCode", "error");			 retMap.put("resMsg", "上传失败！");		} 		String json = JSONUtils.toJson(retMap);		WebUtils.webSendJSON(json);			}		 //获取单元格的值	private static String getCellValue(Cell cell){		 if (cell == null){	        return "";        }        if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC){        	 DecimalFormat df = new DecimalFormat("#");        	 return df.format(cell.getNumericCellValue()).trim();        } else {            return cell.getStringCellValue().trim();        }	}	public File getEmpFile() {		return empFile;	}	public void setEmpFile(File empFile) {		this.empFile = empFile;	}		}